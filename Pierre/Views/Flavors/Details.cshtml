@{
  Layout = "_Layout";
}

@model Pierre.Models.Flavor;

<h2>Flavor Details</h2>

<h3>@Html.DisplayNameFor(model => model.FlavorName): @Html.DisplayFor(model => model.FlavorName)</h3>

@if(@Model.Treats.Count == 0)
{
  <p>This flavor does not contain any treats</p>
}
else
{
  <h4>Treat containing flavor:</h4>
  <ul>
  @foreach(var join in Model.Treats)
  {
    <li>@join.Treat.TreatName</li>
  }
  </ul>
}

    <input class="btn btn-warning" type="button" value="Add Flavor" onclick='location.href="@Url.Action("Create", "Treats", new { id = Model.FlavorId })";' />
    <input class="btn btn-warning" type="button" value="Edit Flavor" onclick='location.href="@Url.Action("Edit", "Flavors", new { id = Model.FlavorId })";' />
    <input class="btn btn-warning" type="button" value="Delete Flavor" onclick='location.href="@Url.Action("Delete", "Flavors", new { id = Model.FlavorId })";' />
    <input class="btn btn-warning" type="button" value="Flavors" onclick='location.href="@Url.Action("Index", "Flavors")";' />
    <input class="btn btn-warning" type="button" value="Home" onclick='location.href="@Url.Action("Index", "Home")";' />

<p>@Html.ActionLink("Back to flavors", "Index")</p>
<p>@Html.ActionLink("Edit Flavor", "Edit", new { id = Model.FlavorId })</p>
<p>@Html.ActionLink("Delete Flavor", "Delete", new { id = Model.FlavorId })</p>
